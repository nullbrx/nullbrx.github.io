{"version":3,"sources":["webpack:///path---terraform-thoughts-68502159c3db9920ae67.js","webpack:///./.cache/json/terraform-thoughts.json"],"names":["webpackJsonp","510","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","date","pathContext","slug","previous","next"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,eAAAC,OAAA,kBAAiDC,gBAAmBC,GAAA,wHAAAC,KAAA,y4DAAAC,aAAoiEL,MAAA,iCAAAM,KAAA,qBAAoEC,aAAgBC,KAAA,uBAAAC,SAAA,KAAAC,KAAA","file":"path---terraform-thoughts-68502159c3db9920ae67.js","sourcesContent":["webpackJsonp([167275451983855],{\n\n/***/ 510:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Nullbrx Blog\",\"author\":\"Brad Thompson\"}},\"markdownRemark\":{\"id\":\"/home/travis/build/nullbrx/nullbrx.github.io/src/pages/terraform-thoughts/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<h1>Intro</h1>\\n<p><a href=\\\"https://www.terraform.io\\\">Terraform</a> is a popular infrastructure-as-code tool used to provision Cloud environments. While toosl lile Ansible and Puppet provide host-configuration, Terraform drastically reduces toil associated with manually provisoining machines and settings with providers.</p>\\n<h2>Getting Started</h2>\\n<p>Getting started with Terraform somewhat difficult, becase I hadn’t worked with other configuration management tools extensively, such as Puppet or Ansible. Although Terraform is not a replacement to these tools, some core concepts proved to be universal, especially with modular code.</p>\\n<p>The true power of Terraform comes from writing modularized code, depending on your background, it can be a confusing start. I highly suggest watching <a href=\\\"https://www.youtube.com/watch?v=LVgP63BkhKQQ\\\">“How to Build Reusable, Composable, Battle Tested Terraform Modules”</a> talk from HashiConf to get a better understanding.</p>\\n<h2>The Joys of Automation</h2>\\n<p>“Automation” occassionally <a href=\\\"https://xkcd.com/1319/\\\">turns into a buzzword</a>, because it’s not *always** a quick turnaround to solutions. I spent a week doing basic infrastructure (creating instances, standardizing environment naming schemes), and I still didn’t have anything useful. However, the real investment showed when we wanted to re-create an instance of OS of every machine in the fleet, or renaming computers (maybe you want to call your computers chipotle.prod instead of qdoba.prod, I don’t know.) It may be slow at first when creating modules initally, but it pays off when you need to do perform fleet-wide changes, or repetitive tasks.</p>\\n<p>I’m excited to see what modules an features Terraform brings in upcoming versions.</p>\\n<h3>Sidenotes</h3>\\n<p>I would recommend reading <a href=\\\"https://blog.gruntwork.io/@brikis98\\\">everything</a> from here if you’re getting started.</p>\",\"frontmatter\":{\"title\":\"Getting Started with Terraform\",\"date\":\"August 04, 2018\"}}},\"pathContext\":{\"slug\":\"/terraform-thoughts/\",\"previous\":null,\"next\":null}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---terraform-thoughts-68502159c3db9920ae67.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Nullbrx Blog\",\"author\":\"Brad Thompson\"}},\"markdownRemark\":{\"id\":\"/home/travis/build/nullbrx/nullbrx.github.io/src/pages/terraform-thoughts/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<h1>Intro</h1>\\n<p><a href=\\\"https://www.terraform.io\\\">Terraform</a> is a popular infrastructure-as-code tool used to provision Cloud environments. While toosl lile Ansible and Puppet provide host-configuration, Terraform drastically reduces toil associated with manually provisoining machines and settings with providers.</p>\\n<h2>Getting Started</h2>\\n<p>Getting started with Terraform somewhat difficult, becase I hadn’t worked with other configuration management tools extensively, such as Puppet or Ansible. Although Terraform is not a replacement to these tools, some core concepts proved to be universal, especially with modular code.</p>\\n<p>The true power of Terraform comes from writing modularized code, depending on your background, it can be a confusing start. I highly suggest watching <a href=\\\"https://www.youtube.com/watch?v=LVgP63BkhKQQ\\\">“How to Build Reusable, Composable, Battle Tested Terraform Modules”</a> talk from HashiConf to get a better understanding.</p>\\n<h2>The Joys of Automation</h2>\\n<p>“Automation” occassionally <a href=\\\"https://xkcd.com/1319/\\\">turns into a buzzword</a>, because it’s not *always** a quick turnaround to solutions. I spent a week doing basic infrastructure (creating instances, standardizing environment naming schemes), and I still didn’t have anything useful. However, the real investment showed when we wanted to re-create an instance of OS of every machine in the fleet, or renaming computers (maybe you want to call your computers chipotle.prod instead of qdoba.prod, I don’t know.) It may be slow at first when creating modules initally, but it pays off when you need to do perform fleet-wide changes, or repetitive tasks.</p>\\n<p>I’m excited to see what modules an features Terraform brings in upcoming versions.</p>\\n<h3>Sidenotes</h3>\\n<p>I would recommend reading <a href=\\\"https://blog.gruntwork.io/@brikis98\\\">everything</a> from here if you’re getting started.</p>\",\"frontmatter\":{\"title\":\"Getting Started with Terraform\",\"date\":\"August 04, 2018\"}}},\"pathContext\":{\"slug\":\"/terraform-thoughts/\",\"previous\":null,\"next\":null}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/terraform-thoughts.json\n// module id = 510\n// module chunks = 167275451983855"],"sourceRoot":""}